# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- group: Terraform_variables

trigger:
- main

pool:
  vmImage: ubuntu-latest


stages:
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: 'install Terraform 0.13'
        inputs:
          terraformVersion: '0.13.5'



      - task: TerraformCLI@0
        displayName: 'Terraform init'
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'aeon-iac-poc'
          backendAzureRmResourceGroupName: 'AeonPoC'
          backendAzureRmStorageAccountName: 'aeoniactfstate'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'tfstate'
          allowTelemetryCollection: true
      - task: TerraformCLI@0
        displayName: 'Terraform Validate'      
        inputs:
          command: 'validate'
          allowTelemetryCollection: true

      - task: TerraformCLI@0
        displayName: 'Terraform Plan'
        inputs:
          command: 'plan'
          environmentServiceName: 'aeon-iac-poc'
          allowTelemetryCollection: true
          commandOptions: -var "admin_password=$(admin_password)"  

      - task: TerraformCLI@0
        displayName: 'Terraform Apply'
        inputs:
          command: 'apply'
          environmentServiceName: 'aeon-iac-poc'
          allowTelemetryCollection: true
          